FAIL
Kernel panic in run: PANIC at ../../devices/disk.c:411 in select_sector(): assertion `sec_no < d->capacity' failed.
Call stack: 0x8004213cf3 0x800420fec1 0x800420f475 0x800421c070 0x800421b5af 0x800421b67f 0x8004219d9a 0x80042180a6 0x8004217803 0x80042194c8 0x8004219062 0x8004218e95
Translation of call stack:
0x0000008004213cf3: debug_panic (lib/kernel/debug.c:32)
0x000000800420fec1: select_sector (devices/disk.c:412)
0x000000800420f475: disk_read (devices/disk.c:218)
0x000000800421c070: inode_read_at (filesys/inode.c:377)
0x000000800421b5af: lookup (filesys/directory.c:106 (discriminator 1))
0x000000800421b67f: dir_lookup (filesys/directory.c:130)
0x0000008004219d9a: filesys_open (filesys/filesys.c:110)
0x00000080042180a6: load (userprog/process.c:668)
0x0000008004217803: process_exec (userprog/process.c:272)
0x00000080042194c8: exec (userprog/syscall.c:199)
0x0000008004219062: syscall_handler (userprog/syscall.c:87)
0x0000008004218e95: no_sti (userprog/syscall-entry.o:?)

This assertion commonly fails when accessing a file via an inode that
has been closed and freed.  Freeing an inode clears all its sector
indexes to 0xcccccccc, which is not a valid sector number for disks
smaller than about 1.6 TB.
