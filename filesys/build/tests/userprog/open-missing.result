FAIL
Kernel panic in run: PANIC at ../../devices/disk.c:411 in select_sector(): assertion `sec_no < d->capacity' failed.
Call stack: 0x8004213cf3 0x800420fec1 0x800420f475 0x800421c070 0x800421b5af 0x800421b67f 0x8004219d9a 0x8004219597 0x8004219109 0x8004218e95 0x400106 0x40018d 0x400c2e
Translation of call stack:
0x0000008004213cf3: debug_panic (lib/kernel/debug.c:32)
0x000000800420fec1: select_sector (devices/disk.c:412)
0x000000800420f475: disk_read (devices/disk.c:218)
0x000000800421c070: inode_read_at (filesys/inode.c:377)
0x000000800421b5af: lookup (filesys/directory.c:106 (discriminator 1))
0x000000800421b67f: dir_lookup (filesys/directory.c:130)
0x0000008004219d9a: filesys_open (filesys/filesys.c:110)
0x0000008004219597: open (userprog/syscall.c:224)
0x0000008004219109: syscall_handler (userprog/syscall.c:101)
0x0000008004218e95: no_sti (userprog/syscall-entry.o:?)
0x0000000000400106: (unknown)
0x000000000040018d: (unknown)
0x0000000000400c2e: (unknown)

This assertion commonly fails when accessing a file via an inode that
has been closed and freed.  Freeing an inode clears all its sector
indexes to 0xcccccccc, which is not a valid sector number for disks
smaller than about 1.6 TB.
